using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Threading;
using System.Globalization;
using System.Numerics;

namespace HelloCSharp
{
    class Program
    {
        static void Main(string[] args)
        {
        // Sum of numbers from 1 to n
            int sum = 0;
            int count = 1;
            Console.Write("n = ");
            int n = int.Parse(Console.ReadLine());
            Console.Write("The sum 1");

            while (count <= n)
            {
                sum += count;
                count++;
                if (count <= n)
                {
                    Console.Write(" + " + count);
                }
            }
            Console.WriteLine(" = " + sum);
            
            // N prime or not
            bool prime = true;
            int remain = 1;
            int count = 2;
            Console.Write("n = ");
            int n = int.Parse(Console.ReadLine());

            while (remain != 0 && count < n)
            {
                remain = n % count;
                if (remain == 0)
                {
                    Console.WriteLine("The number {0} is not a prime number.", n);
                    prime = false;
                }
                count++;
            }
            if (prime)
            {
                Console.WriteLine("The number {0} is a prime number.", n);
            }
            
            //Factorial of a large number
            int n = int.Parse(Console.ReadLine());
            BigInteger factorial = 1;
            // Perform an "infinite loop"
            while (true)
            {
                if (n <= 1)
                {
                    break;
                }
                factorial *= n;
                n--;
            }
            Console.WriteLine("n! = " + factorial);
            
            //Product of numbers from m to n
            Console.Write("m = ");
            int m = int.Parse(Console.ReadLine());
            Console.Write("n = ");
            int n = int.Parse(Console.ReadLine());
            decimal product = 1;
            do
            {
                product *= n;
                n--;
            } while (n >= m);
            Console.WriteLine("Product of numbers from m to n = " + product);
            
            /* 1.    Write a program that prints on the console the numbers from 1 to N. 
             * The number N should be read from the standard input.
             */

            Console.WriteLine("Task 1 : Printing numbers from 1 to n.");
            Console.Write("n = ");
            int n = int.Parse(Console.ReadLine());

            for (int i = 1; i <= n; i++)
            {
                Console.Write(" " + i);
            }
            Console.WriteLine();
            
            /* 2.    Write a program that prints on the console the numbers from 1 to N, 
             * which are not divisible by 3 and 7 simultaneously. The number N should be read from the standard input.      
             */

            Console.WriteLine("Task 2 : Printing numbers from 1 to n, not divisible by 3 and 7 simultaneously.");
            Console.Write("n = ");
            int n = int.Parse(Console.ReadLine());

            for (int i = 1; i <= n; i++)
            {
                if (i % 21 == 0)
                {
                    continue;
                }
                Console.Write(" " + i);
            }
            Console.WriteLine();
            
            /* 5.    Write a program that reads from the console number N and print the sum of the first N members of the 
             * Fibonacci sequence: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, â€¦
             */

            Console.WriteLine("Task 5 : Printing the sum of the first n numbers of the Fibonacci sequence.");

            Console.Write("n = ");
            int n = int.Parse(Console.ReadLine());

            switch (n)
            {
                case 1: Console.WriteLine("0"); break;
                case 2: Console.WriteLine("0 + 1 = 1"); break;
                default: Console.Write("0 + 1"); break;
            }

            int firstVar = 0, secondVar = 1, thirdVar, sum = 1;

            for (int i = 3; i <= n; i++)
            {
                thirdVar = firstVar + secondVar;
                Console.Write(" + " + thirdVar);
                sum += thirdVar;
                firstVar = secondVar;
                secondVar = thirdVar;
            }
            Console.Write(" = " + sum);
            Console.WriteLine();
            
            /* 6.    Write a program that calculates N!/K! for given N and K (1<K<N).
             */

            Console.WriteLine("Task 6 : Calculating N!/K!.");

            Console.Write("n = ");
            int n = int.Parse(Console.ReadLine());

            Console.Write("k = ");
            int k = int.Parse(Console.ReadLine());

            int nFactoriel = 1, kFactoriel = 1;

            if (k < n && 0 < k)
            {
                for (int i = 1; i <= n; i++)
                {
                    nFactoriel *= i;
                }
                for (int i = 1; i <= k; i++)
                {
                    kFactoriel *= i;
                }
                Console.WriteLine("N!/K! = " + nFactoriel / kFactoriel);
            }
            else
            {
                Console.WriteLine("Invalid input.");
            }
            
            //OR
            
            int Factorial = 1;

            if (k < n && 0 < k)
            {
                for (int i = k + 1; i <= n; i++)
                {
                    Factorial *= i;
                }
                Console.WriteLine("N!/K! = " + Factorial);     
            }
            else
            {
                Console.WriteLine("Invalid input.");
            }
        }
    }
}
